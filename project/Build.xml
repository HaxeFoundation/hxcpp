<xml>

<include name="${HXCPP}/build-tool/BuildCommon.xml"/>


<files id="std" >
  <depend name="${HXCPP}/include/hx/Macros.h"/>
  <depend name="${HXCPP}/include/hx/CFFI.h"/>

  <file name="Sys.cpp"/>
  <file name="Xml.cpp"/>
  <file name="Process.cpp"/>
  <file name="Random.cpp"/>
  <file name="Socket.cpp" unless="emscripten" />
  <file name="String.cpp"/>
  <file name="File.cpp"/>
  <file name="Init.cpp"/>
  <file name="Misc.cpp"/>
  <file name="Interface.cpp" unless="static_link" />

</files>



<target id="std" output="${LIBPREFIX}std${LIB_DBG}${LIBEXTRA}" tool="linker" toolid="${STD_MODULE_LINK}">
  <builddir name="libs/std" />
  <files id="std"/>
  <lib name="ws2_32.lib" if="windows" unless="static_link" />
  <lib name="-lsocket" if="blackberry" unless="static_link" />
  <outdir name="../../../${DESTDIR}/${BINDIR}"/>
</target>

<set name="PCRE_DIR" value="../../thirdparty/pcre-7.8" />

<files id="regexp" >
  <depend name="${HXCPP}/include/hx/Macros.h"/>
  <depend name="${HXCPP}/include/hx/CFFI.h"/>

  <compilerflag value="-DPCRE_STATIC"/>
  <compilerflag value="-DSUPPORT_UTF8"/>
  <compilerflag value="-I${PCRE_DIR}"/>

  <file name="RegExp.cpp"/>

  <file name="${PCRE_DIR}/pcre_get.c"/>
  <file name="${PCRE_DIR}/pcre_study.c"/>
  <file name="${PCRE_DIR}/pcre_chartables.c"/>
  <file name="${PCRE_DIR}/pcre_globals.c"/>
  <file name="${PCRE_DIR}/pcre_tables.c"/>
  <file name="${PCRE_DIR}/pcre_compile.c"/>
  <file name="${PCRE_DIR}/pcre_info.c"/>
  <file name="${PCRE_DIR}/pcre_try_flipped.c"/>
  <file name="${PCRE_DIR}/pcre_config.c"/>
  <file name="${PCRE_DIR}/pcre_maketables.c"/>
  <file name="${PCRE_DIR}/pcre_ucd.c"/>
  <file name="${PCRE_DIR}/pcre_dfa_exec.c"/>
  <file name="${PCRE_DIR}/pcre_newline.c"/>
  <file name="${PCRE_DIR}/pcre_valid_utf8.c"/>
  <file name="${PCRE_DIR}/pcre_exec.c"/>
  <file name="${PCRE_DIR}/pcre_ord2utf8.c"/>
  <file name="${PCRE_DIR}/pcre_version.c"/>
  <file name="${PCRE_DIR}/pcre_fullinfo.c"/>
  <file name="${PCRE_DIR}/pcre_refcount.c"/>
  <file name="${PCRE_DIR}/pcre_xclass.c"/>

</files>



<target id="regexp" output="${LIBPREFIX}regexp${LIB_DBG}${LIBEXTRA}" tool="linker" toolid="${STD_MODULE_LINK}">
  <files id="regexp"/>
  <builddir name="libs/regexp" />
  <outdir name="../../../${DESTDIR}/${BINDIR}"/>
</target>

<set name="ZLIB_DIR" value="../../thirdparty/zlib-1.2.3"/>

<files id="zlib" >
  <depend name="${HXCPP}/include/hx/Macros.h"/>
  <depend name="${HXCPP}/include/hx/CFFI.h"/>

  <compilerflag value="-I${ZLIB_DIR}"/>

  <file name="ZLib.cpp"/>

  <file name="${ZLIB_DIR}/adler32.c"/>
  <file name="${ZLIB_DIR}/crc32.c"/>
  <file name="${ZLIB_DIR}/infback.c"/>
  <file name="${ZLIB_DIR}/inflate.c"/>
  <file name="${ZLIB_DIR}/uncompr.c"/>
  <file name="${ZLIB_DIR}/compress.c"/>
  <file name="${ZLIB_DIR}/deflate.c"/>
  <file name="${ZLIB_DIR}/gzio.c"/>
  <file name="${ZLIB_DIR}/inffast.c"/>
  <file name="${ZLIB_DIR}/inftrees.c"/>
  <file name="${ZLIB_DIR}/trees.c"/>
  <file name="${ZLIB_DIR}/zutil.c"/>
</files>




<target id="zlib" output="${LIBPREFIX}zlib${LIB_DBG}${LIBEXTRA}" tool="linker" toolid="${STD_MODULE_LINK}">
  <files id="zlib"/>
  <outdir name="../../../${DESTDIR}/${BINDIR}"/>
  <builddir name="libs/zlib"/>
</target>


<files id="mysql" >
  <depend name="${HXCPP}/include/hx/Macros.h"/>
  <depend name="${HXCPP}/include/hx/CFFI.h"/>

  <file name="mysql.cpp"/>
  <file name="my_proto/my_api.cpp"/>
  <file name="my_proto/my_proto.cpp"/>
  <file name="../common/socket.cpp"/>
  <file name="../common/sha1.cpp"/>
</files>


<target id="mysql" output="${LIBPREFIX}mysql5${LIB_DBG}${LIBEXTRA}" tool="linker" toolid="${STD_MODULE_LINK}">
  <files id="mysql"/>
  <builddir name="libs/mysql"/>
  <lib name="ws2_32.lib" if="windows" unless="static_link" />
  <outdir name="../../../${DESTDIR}/${BINDIR}"/>
</target>



<files id="sqlite" >
  <depend name="${HXCPP}/include/hx/Macros.h"/>
  <depend name="${HXCPP}/include/hx/CFFI.h"/>
  <file name="sqlite3.c"/>
  <file name="sqlite.cpp"/>
</files>


<target id="sqlite" output="${LIBPREFIX}sqlite${LIB_DBG}${LIBEXTRA}" tool="linker" toolid="${STD_MODULE_LINK}">
  <files id="sqlite"/>
  <builddir name="libs/sqlite"/>
  <outdir name="../../../${DESTDIR}/${BINDIR}"/>
  <lib name="-lpthread" if="linux" unless="static_link" />
</target>



<files id="msvccompat" >
  <file name="StlLink.cpp"/>
</files>


<target id="msvccompat" output="${LIBPREFIX}msvccompat${LIB_DBG}-${MSVC_VER}${LIBEXTRA}" tool="linker" toolid="${STD_MODULE_LINK}">
  <files id="msvccompat"/>
  <builddir name="libs/msvccompat"/>
  <outdir name="../../../${DESTDIR}/${BINDIR}"/>
</target>





<files id="linuxcompat" >
  <file name="FdeltChk.c"/>
</files>


<target id="linuxcompat" output="${LIBPREFIX}linuxcompat${LIBEXTRA}" tool="linker" toolid="${STD_MODULE_LINK}">
  <files id="linuxcompat"/>
  <builddir name="libs/linuxcompat"/>
  <outdir name="../../../${DESTDIR}/${BINDIR}"/>
</target>



<files id="nekoapi" >
  <depend name="libs/nekoapi/neko.h"/>
  <depend name="${HXCPP}/include/hx/Macros.h"/>
  <depend name="${HXCPP}/include/hx/CFFI.h"/>
  <file name="NekoAPI.cpp"/>
  <compilerflag value="-Dneko_v1" if="neko_v1" />
</files>



<set name="neko_v2" value="1" unless="neko_v1" />

<set name="NEKO_LIB_DIR" value="bin/${BINDIR}" />

<target id="nekoapi" output="nekoapi" tool="linker" toolid="dll">
  <ext value=".ndll"/>
  <files id="nekoapi"/>
  <builddir name="libs/nekoapi"/>
  <lib name="${NEKO_LIB_DIR}/neko.lib" if="windows" />
  <lib name="-L${NEKO_LIB_DIR}" unless="windows"/>
  <lib name="-lneko" unless="windows"/>
  <outdir name="../../../bin/${BINDIR}"/>
</target>



<target id="default">
   <target id="std"/>
   <target id="regexp"/>
   <target id="zlib"/>
   <target id="mysql"/>
   <target id="sqlite"/>
   <section if="static_link">
      <target id="msvccompat" if="windows" unless="mingw" />
      <target id="linuxcompat" if="linux" />
      <target id="linuxcompat" if="gcw0" />
   </section>
</target>


</xml>
