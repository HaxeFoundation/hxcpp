<xml>

<!-- make sure hxcpp.n is up to date -->
<pleaseUpdateHxcppTool version="1" />


<!-- Use value from Build.xml file unless one is specified from the haxe defines -->
<set name="hxcpp_api_level" value="${HXCPP_API_LEVEL}" unless="hxcpp_api_level" if="HXCPP_API_LEVEL"  />

<!-- You can override the exes an "exe" section on your own .hxcpp_config -->
<!-- You can use replace="1" to change the compiler, or omit to add flags -->

<!-- Library files & targets -------------------------------------->

<files id="hxcpp-depends">
  <depend name="${HXCPP}/include/hxcpp.h"/>
  <depend name="${HXCPP}/include/Array.h"/>
  <depend name="${HXCPP}/include/Dynamic.h"/>
  <depend name="${HXCPP}/include/hxString.h"/>
  <depend name="${HXCPP}/include/hxMath.h"/>
  <depend name="${HXCPP}/include/null.h"/>
  <depend name="${HXCPP}/include/hx/Class.h"/>
  <depend name="${HXCPP}/include/Enum.h"/>
  <depend name="${HXCPP}/include/hx/Debug.h"/>
  <depend name="${HXCPP}/include/hx/Telemetry.h"/>
  <depend name="${HXCPP}/include/hx/Object.h"/>
  <depend name="${HXCPP}/include/hx/Operators.h"/>
  <depend name="${HXCPP}/include/hx/Macros.h"/>
  <depend name="${HXCPP}/include/hx/GC.h"/>
  <depend name="${HXCPP}/include/hx/CFFI.h"/>
  <depend name="${HXCPP}/include/hx/CFFIAPI.h"/>
  <depend name="${HXCPP}/include/hx/CFFILoader.h"/>
  <depend name="${HXCPP}/include/hx/StdLibs.h"/>
  <depend name="${HXCPP}/include/hx/OS.h"/>
  <depend name="${HXCPP}/include/cpp/Pointer.h"/>
  <depend name="${HXCPP}/include/hx/Scriptable.h"/>
  <section unless="HXCPP_LINK_NO_TOOL_DEPENDS" >
     <depend name="${HXCPP}/toolchain/haxe-target.xml"/>
     <depend name="${HXCPP}/toolchain/${toolchain}-toolchain.xml" ifExists="${HXCPP}/toolchain/${toolchain}-toolchain.xml"/>
     <depend name="${HXCPP}/hxcpp.n" ifExists="${HXCPP}/hxcpp.n" />
  </section>
</files>
 


<!-- Additional dependencies for haxe target -->
<files id="haxe">
  <depend files="hxcpp-depends"/>
  <options name="Options.txt"/>

  <precompiledheader name="hxcpp" dir="${HXCPP}/include" if="USE_PRECOMPILED_HEADERS"/>
</files>


<files id="__resources__">
</files>

<files id="__externs__">
</files>


<files id="__main__">
  <depend files="hxcpp-depends"/>
  <depend name="${HXCPP}/include/hx/HxcppMain.h"/>
  <options name="Options.txt"/>
  <compilerflag value="-DHX_DECLARE_MAIN"/>
</files>

<files id="__lib__">
  <depend files="hxcpp-depends"/>
  <options name="Options.txt"/>
  <compilerflag value="-DHX_DECLARE_MAIN"/>
</files>


<files id="cppia" dir="${HXCPP}" >
  <depend files="hxcpp-depends"/>
  <options name="Options.txt"/>
  <depend name="${HXCPP}/src/hx/cppia/Cppia.h" />
  <depend name="${HXCPP}/src/hx/cppia/CppiaStream.h" />
  <depend name="${HXCPP}/src/hx/cppia/CppiaCompiler.h"  if="CPPIA_JIT" />
  <compilerflag value="-DHX_UNDEFINE_H" />
  <compilerflag value="-DCPPIA_JIT" if="CPPIA_JIT" />

  <file name = "src/hx/cppia/Cppia.cpp" />
  <file name = "src/hx/cppia/CppiaCtx.cpp" />
  <file name = "src/hx/cppia/ArrayBuiltin.cpp" />
  <file name = "src/hx/cppia/StringBuiltin.cpp" />
  <file name = "src/hx/cppia/GlobalBuiltin.cpp" />
  <file name = "src/hx/cppia/HaxeNative.cpp" />
  <file name = "src/hx/cppia/CppiaVars.cpp" />
  <file name = "src/hx/cppia/CppiaCompiler.cpp" if="CPPIA_JIT" />
</files>


<files id="runtime" dir="${HXCPP}">
  <depend files="hxcpp-depends"/>
  <options name="Options.txt"/>
  <depend name="${HXCPP}/src/hx/Hash.h"/>

  <compilerflag value="-D_CRT_SECURE_NO_DEPRECATE"/>

  <compilerflag value="-DHX_UNDEFINE_H" />

  <precompiledheader name="hxcpp" dir="${HXCPP}/include" if="USE_PRECOMPILED_HEADERS"/>

  <file name = "src/hx/Anon.cpp"/>
  <file name = "src/hx/Boot.cpp"/>
  <file name = "src/hx/CFFI.cpp"/>
  <file name = "src/hx/Date.cpp"/>
  <file name = "src/hx/GC.cpp"/>
  <file name = "src/hx/GCInternal.cpp"/>
  <file name = "src/hx/Hash.cpp"/>
  <file name = "src/hx/Interface.cpp"/>
  <file name = "src/hx/Lib.cpp"/>
  <file name = "src/hx/Object.cpp"/>
  <file name = "src/hx/StdLibs.cpp"/>
  <file name = "src/hx/Debug.cpp"/>
  <file name = "src/hx/Thread.cpp"/>
  <file name = "src/hx/RunLibs.cpp" if="static_link"/>

  <file name = "src/Array.cpp"/>
  <file name = "src/hx/Class.cpp"/>
  <file name = "src/Dynamic.cpp"/>
  <file name = "src/Enum.cpp"/>
  <file name = "src/Math.cpp"/>
  <file name = "src/String.cpp"/>

</files>


<target id="default">
   <target id="haxe"/>
</target>


<target id="clean" tool="clean">
  <dir name="obj"/>
</target>

<set name="EXESUFFIX" value=".exe" if="windows" />

<target id="haxe" tool="linker" toolid="${haxelink}" output="${LIBPREFIX}${HAXE_OUTPUT}${DBG}">
  <files id="haxe"/>
  <options name="Options.txt"/>
  <ext value="${LIBEXTRA}.a" if="iphoneos" unless="dll_import" />
  <ext value="${LIBEXTRA}.a" if="iphonesim" unless="dll_import" />

  <section if="android">
     <ext value="${LIBEXTRA}.so" />
     <ext value="${LIBEXTRA}.a"  if="static_link" />
     <ext value="${LIBEXTRA}" if="exe_link" />
  </section>

  <files id="__main__" unless="static_link" />
  <files id="__lib__" if="static_link"/>
  <files id="__resources__" />
  <files id="__externs__" />
  <files id="runtime" unless="dll_import" />
  <files id="cppia" if="scriptable" />
  <lib name="-lpthread" if="linux" unless="static_link" />
  <lib name="-ldl" if="linux" unless="static_link" />
</target>


</xml>


